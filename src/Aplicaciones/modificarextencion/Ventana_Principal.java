/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Aplicaciones.modificarextencion;

import Aplicaciones.librerias.Estado_Actual;
import Utiles.Exepciones.ExisteException;
import Utiles.Exepciones.NoEncontradoException;
import Utiles.Exepciones.NoPermitidoException;
import Utiles.Exepciones.PINException;
import static Utiles.MetodosUtiles.Visual.*;
import static Utiles.MetodosUtiles.Archivo.*;
import java.io.File;
import java.io.FileNotFoundException;
//import static Utiles.MetodosUtiles.MetodosUtiles.*;
import java.io.IOException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static Aplicaciones.modificarextencion.ModificarExtencion.*;
import Utiles.ClasesUtiles.Configuraciones.ConfiguracionDeVideo;
import Utiles.ClasesUtiles.Configuraciones.Ventanas.Ventana_ConfiguracionDeVideo;
import Utiles.ClasesUtiles.Interfases.Accion_Cargar_Cancelar;
import static Utiles.MetodosUtiles.Videos.activar;
import static Utiles.MetodosUtiles.Videos.capitulosQueFaltan;
import static Utiles.MetodosUtiles.Videos.desactivar;
import static Utiles.MetodosUtiles.Videos.eliminarNumeroDelPricipio;
import static Utiles.MetodosUtiles.Videos.moverNumero;
import static Utiles.MetodosUtiles.Videos.moverNumeroInverso;
import java.awt.event.ItemEvent;
import java.util.LinkedList;
import java.util.TreeSet;
import javax.swing.JFrame;
import static todo.Todo.*;

/**
 *
 * @author Rene
 */
public class Ventana_Principal extends javax.swing.JFrame {

    JFileChooser jf = new JFileChooser();
    ConfiguracionDeVideo cdv;
    EstadoActual EA;
    //  MoverNumeroConfiguracion conf;

    /**
     * Creates new form Ventana_Principal
     */
    public Ventana_Principal() throws IOException, ClassNotFoundException {
//      conf = (MoverNumeroConfiguracion) cargarArchivo(DIRECCION_ESTADO_ACTUAL);
        EA = (EstadoActual) cargarArchivo(DIRECCION_ESTADO_ACTUAL);
        cdv = EA.getT().getCdvSelecionado();
        initComponents();
        T.setText(EA.getDireccion().toString());
        seguridad();
        setLocationRelativeTo(null);
        todasLasVentanas = new JFrame[]{this, ventanaDirecciones, ventanaNuevaDireccion, ventanaCanviarDireccion, ventana_ConfiguracionDeVideo};
    }

//    public Ventana_Principal(Estado_Actual estado_Actual) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }
//
//    public Ventana_Principal(Estado_Actual estado_Actual) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }
    public void setDireccion(String direccion) {
        T.setText(direccion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PTodo = new javax.swing.JPanel();
        T = new javax.swing.JTextField();
        BDirecciones = new javax.swing.JButton();
        BBuscarCarpeta = new javax.swing.JButton();
        BActivar = new javax.swing.JButton();
        BDesactivar = new javax.swing.JButton();
        BGuardarDireccion = new javax.swing.JButton();
        LDireccion = new javax.swing.JLabel();
        BConfiguracion = new javax.swing.JButton();
        CInvasivo = new javax.swing.JCheckBox();
        BAtras = new javax.swing.JButton();
        CBDirecciones = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modificar Nombres");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                cerrandoVentana(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                cerroVentana(evt);
            }
        });

        PTodo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        T.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                soltarTeclado(evt);
            }
        });
        PTodo.add(T, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 470, -1));

        BDirecciones.setText("Direcciones");
        BDirecciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDireccionesActionPerformed(evt);
            }
        });
        PTodo.add(BDirecciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        BBuscarCarpeta.setText("Buscar Carpeta");
        BBuscarCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBuscarCarpetaActionPerformed(evt);
            }
        });
        PTodo.add(BBuscarCarpeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, -1));

        BActivar.setText("Activar");
        BActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActivarActionPerformed(evt);
            }
        });
        PTodo.add(BActivar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 90, -1));

        BDesactivar.setText("Desactivar");
        BDesactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDesactivarActionPerformed(evt);
            }
        });
        PTodo.add(BDesactivar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, -1, -1));

        BGuardarDireccion.setText("Guardar Direccion");
        BGuardarDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BGuardarDireccionActionPerformed(evt);
            }
        });
        PTodo.add(BGuardarDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, -1, -1));

        LDireccion.setText("Direccion");
        PTodo.add(LDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, -1, -1));

        BConfiguracion.setText("Configuracion");
        BConfiguracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BConfiguracionActionPerformed(evt);
            }
        });
        PTodo.add(BConfiguracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, -1, -1));

        CInvasivo.setText("Invasivo");
        CInvasivo.setToolTipText("si se desean que se modifiquen tambien todas las subcarpetas");
        PTodo.add(CInvasivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 35, -1, -1));

        BAtras.setText("Atras");
        BAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAtrasActionPerformed(evt);
            }
        });
        PTodo.add(BAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        CBDirecciones.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "   "}));
        actualizarCBDirecciones();
        CBDirecciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selecionoCBDirecciones(evt);
            }
        });
        CBDirecciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBDireccionesActionPerformed(evt);
            }
        });
        CBDirecciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SeleccionoBGDireccionesActuales(evt);
            }
        });
        PTodo.add(CBDirecciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PTodo, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BBuscarCarpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBuscarCarpetaActionPerformed

        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        if (buscador(jf, this)) {
            T.setText(arreglarDireccion(jf.getSelectedFile().toString()));
            seguridad();
        }
    }//GEN-LAST:event_BBuscarCarpetaActionPerformed

    private void BActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActivarActionPerformed
        activar(arreglarDireccion(T.getText().trim()), CInvasivo.isSelected());
    }//GEN-LAST:event_BActivarActionPerformed

    private void BDesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDesactivarActionPerformed
        desactivar(arreglarDireccion(T.getText().trim()), CInvasivo.isSelected());
    }//GEN-LAST:event_BDesactivarActionPerformed

    private void BDireccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDireccionesActionPerformed
        try {
            visualizarDirecciones();
        } catch (Exception ex) {
            responerException(ex);
        }
    }//GEN-LAST:event_BDireccionesActionPerformed

    private void BGuardarDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BGuardarDireccionActionPerformed
        visualizarNuevaDireccion();
    }//GEN-LAST:event_BGuardarDireccionActionPerformed

    private void soltarTeclado(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_soltarTeclado
        seguridad();
    }//GEN-LAST:event_soltarTeclado

    private void BConfiguracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BConfiguracionActionPerformed

        visualizarVentanaConfiguracion();
    }//GEN-LAST:event_BConfiguracionActionPerformed

    private void BAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAtrasActionPerformed
        maximizarVentana(ventanaTodo);
        setVisible(false);
    }//GEN-LAST:event_BAtrasActionPerformed

    private void cerroVentana(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_cerroVentana
        alCerrar(this);
    }//GEN-LAST:event_cerroVentana

    private void selecionoCBDirecciones(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selecionoCBDirecciones
        if (evt.getStateChange() == ItemEvent.SELECTED && CBDirecciones.getSelectedIndex() != 0) {
            setDireccion(arreglarDireccion(CBDirecciones.getSelectedItem().toString().trim()));
            seguridad();
        }
    }//GEN-LAST:event_selecionoCBDirecciones

    private void CBDireccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBDireccionesActionPerformed
        // System.out.println("se la");

    }//GEN-LAST:event_CBDireccionesActionPerformed

    private void SeleccionoBGDireccionesActuales(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SeleccionoBGDireccionesActuales
        actualizarCBDirecciones();
    }//GEN-LAST:event_SeleccionoBGDireccionesActuales

    private void cerrandoVentana(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_cerrandoVentana
        try {
             EA.setDireccion(new File(T.getText()));
            crearArchivo(DIRECCION_ESTADO_ACTUAL, EA);
        } catch (Exception ex) {
            responerException(ex);
        }
    }//GEN-LAST:event_cerrandoVentana

    public synchronized void actualizarCBDirecciones() {
        CBDirecciones.removeAllItems();
        CBDirecciones.removeAll();
        CBDirecciones.addItem("  ");
        //System.out.println("aaa");
//        TreeSet<String> dire=new TreeSet<String>();
//        for (int i = 0; i < File.listRoots().length; i++) {
//            dire.add(File.listRoots()[i].toString());
//        }
//        for (int i = 0; i < dire.size(); i++) {
//            CBDirecciones.addItem(dire.pollFirst());
//        }
//        
        //For:
        for (int i = 0; i < File.listRoots().length; i++) {
            // String nuevo = File.listRoots()[i].toString();
//            for (int j = 0; j < CBDirecciones.getItemCount(); j++) {
//              //  System.out.println("nuevo="+nuevo+" CBDirecciones.getItemAt(i).toString()="+CBDirecciones.getItemAt(i).toString());
//                if (nuevo.equalsIgnoreCase(CBDirecciones.getItemAt(i).toString())) {
//                    continue For;
//                }
//            }
            CBDirecciones.addItem(File.listRoots()[i].toString());
        }

    }

    public void alCerrar(JFrame f) {
        cerrar(f, 0);
//        if (algunaAplicacionActiva(0)) {
//            f.setVisible(false);
//        } else {
//            System.exit(0);
//        }
    }

    public void visualizarVentanaConfiguracion() {
        try {
            if (ventana_ConfiguracionDeVideo == null) {
                ventana_ConfiguracionDeVideo = new Ventana_ConfiguracionDeVideo(EA.getT(), DIRECCION_ADMINISTRADOR_CONFIGURACIONES, new Accion_Cargar_Cancelar() {

                    @Override
                    public void aceptar_Y_cargar() {
                        EA.setT(ventana_ConfiguracionDeVideo.getTOriginal());
                        cdv = EA.getT().getCdvSelecionado();
                        ventana_ConfiguracionDeVideo.setVisible(false);
                        setVisible(true);
                    }

                    @Override
                    public void cancelar() {
                        ventana_ConfiguracionDeVideo.setVisible(false);
                        setVisible(true);
                    }
                });
            } else {
                ventana_ConfiguracionDeVideo.setDireccionAdministrador(DIRECCION_ADMINISTRADOR_CONFIGURACIONES);
            }

            ventana_ConfiguracionDeVideo.setVisible(true);
            setVisible(false);
        } catch (Exception ex) {
            responerException(ex);
        }

//        ventanaMoverNumeroConfiguracion = new Ventana_Mover_Numero_Configuracion(conf);
//        ventanaMoverNumeroConfiguracion.setVisible(true);
//        setVisible(false);
    }

    public String obtenerTexto() {
        return arreglarDireccion(T.getText().trim());
    }

    public File obtenerFile() {
        return new File(obtenerTexto());
    }

    public void seguridad() {
        //  eliminarEspaciosDelPrincipioJTextField(T);

        if (seguridadJTextField(T, arreglarDireccion(T.getText().trim()), BGuardarDireccion, BActivar, BDesactivar)) {
            File porDefecto = obtenerFile();
            if (porDefecto.exists()) {
                jf.setSelectedFile(porDefecto);
            }
        }
        //  actualizarCBDirecciones();
        // System.out.println("");
        //    System.out.println(new File(arreglarDireccion(T.getText())).exists());
    }

    private void visualizarDirecciones() throws IOException, ClassNotFoundException {
        ventanaDirecciones = new Ventana_Direcciones();
        ventanaDirecciones.setVisible(true);
        setVisible(false);
    }

    private void visualizarNuevaDireccion() {
        ventanaNuevaDireccion = new Ventana_Nueva_Direccion(arreglarDireccion(T.getText()));
        ventanaNuevaDireccion.setVisible(true);
        setVisible(false);
    }

//    private void responerException(Exception ex) {
//        if (ex instanceof NoEncontradoException) {
//            JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        if (ex instanceof PINException) {
//            JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        if (ex instanceof ExisteException) {
//            JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        if (ex instanceof IOException) {
//            JOptionPane.showMessageDialog(this, "No se pudo guardar el archibo", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        if (ex instanceof FileNotFoundException) {
//            JOptionPane.showMessageDialog(this, "No se encuentra el archibo", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        ex.printStackTrace();
//    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Ventana_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Ventana_Principal().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BActivar;
    private javax.swing.JButton BAtras;
    private javax.swing.JButton BBuscarCarpeta;
    private javax.swing.JButton BConfiguracion;
    private javax.swing.JButton BDesactivar;
    private javax.swing.JButton BDirecciones;
    private javax.swing.JButton BGuardarDireccion;
    private javax.swing.JComboBox CBDirecciones;
    private javax.swing.JCheckBox CInvasivo;
    private javax.swing.JLabel LDireccion;
    private javax.swing.JPanel PTodo;
    private javax.swing.JTextField T;
    // End of variables declaration//GEN-END:variables
}
